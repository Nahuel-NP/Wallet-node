datasource db {
  provider = "postgresql" // Puedes cambiar a MySQL u otro soporte por Prisma
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int           @id @default(autoincrement())
  name      String
  email     String        @unique
  password  String
  wallet    Wallet?
  logs      SecurityLog[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

model Wallet {
  id           Int           @id @default(autoincrement())
  user         User          @relation(fields: [userId], references: [id])
  userId       Int           @unique
  cvu          Int
  alias        String
  balance      Decimal       @db.Decimal(18, 2)
  currency     String
  version      Int           @default(1) // Para Optimistic Locking
  transactions Transaction[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Transaction {
  id              Int         @id @default(autoincrement())
  wallet          Wallet      @relation(fields: [walletId], references: [id])
  walletId        Int
  transactionType String // Ej: 'deposit', 'withdrawal', 'transfer'
  amount          Decimal     @db.Decimal(18, 2)
  status          String // Ej: 'pending', 'completed', 'failed'
  transactionId   String      @unique // Para evitar double-spending
  operations      Operation[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Operation {
  id            Int         @id @default(autoincrement())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  amount        Decimal     @db.Decimal(18, 2)
  operationType String // Ej: 'debit', 'credit', 'fee'
  createdAt     DateTime    @default(now())
}

model SecurityLog {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  action    String // Ej: 'login', 'failed_transaction', 'password_change'
  ipAddress String
  userAgent String
  createdAt DateTime @default(now())
}
